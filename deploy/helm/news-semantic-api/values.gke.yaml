image:
  repository: us-central1-docker.pkg.dev/news-semantic-api-gcp/news-semantic-api/news-semantic-api
  tag: "latest"
  pullPolicy: IfNotPresent

service:
  type: LoadBalancer
  port: 8000

ingress:
  enabled: false  # Para demo usamos Service tipo LB. Puedes activar Ingress m√°s adelante.

resources:
  requests: { cpu: 250m, memory: 1Gi }
  limits:   { cpu: "1",  memory: 2Gi }

env:
  EMBEDDING_BACKEND: "fastembed"
  MODEL_NAME: "sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2"
  QDRANT_HOST: ""      # se autocomputa a "<release>-qdrant"
  QDRANT_PORT: "6333"
  UVICORN_WORKERS: "1" # <- un solo worker para no duplicar memoria de modelos

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75

# (Opcional) Solo tiene efecto si tus templates lo soportan.
# Si no los usan, este bloque es inofensivo.
probes:
  readiness:
    initialDelaySeconds: 25
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
  liveness:
    initialDelaySeconds: 35
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3

qdrant:
  enabled: true
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: "standard-rwo"   # clase por defecto en GKE Autopilot
  resources:
    requests: { cpu: 200m, memory: 512Mi }

config:
  APP_LOG_LEVEL: "INFO"

secret:
  enabled: false
  data: {}

# Habilita ServiceMonitor para Prometheus (si instalaste los CRDs / stack)
monitoring:
  serviceMonitor:
    enabled: true
  prometheusRelease: kube-prometheus-stack
