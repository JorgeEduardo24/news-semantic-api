apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    app.kubernetes.io/name: news-semantic-api
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: news-semantic-api
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: news-semantic-api
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: EMBEDDING_BACKEND
              value: {{ .Values.env.EMBEDDING_BACKEND | quote }}
            - name: MODEL_NAME
              value: {{ .Values.env.MODEL_NAME | quote }}
            - name: QDRANT_HOST
              value: {{ default (printf "%s-qdrant" .Release.Name) .Values.env.QDRANT_HOST | quote }}
            - name: QDRANT_PORT
              value: {{ .Values.env.QDRANT_PORT | quote }}
            - name: UVICORN_WORKERS
              value: {{ .Values.env.UVICORN_WORKERS | quote }}
          envFrom:
            - configMapRef: { name: {{ .Release.Name }}-config }
            {{- if .Values.secret.enabled }}
            - secretRef:    { name: {{ .Release.Name }}-secret }
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet: { path: /readyz,  port: {{ .Values.service.port }} }
            initialDelaySeconds: 10
          livenessProbe:
            httpGet: { path: /healthz, port: {{ .Values.service.port }} }
            initialDelaySeconds: 20
